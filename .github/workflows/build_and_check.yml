name: PlatformIO CI

on: [push]

jobs:
  dependencies:
    name: setup dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          platformio update
      - run: pip list -v
      - name: Cache PlatformIO
        uses: actions/cache@v3
        id: platformio-cache
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/lockfiles') }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py-pip-

  build:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py-pip-
      - run: ls /home/runner/work/_temp -la
      - name: pip before
        run: pip list -v
      - run: |
          pip install --upgrade platformio
          platformio update
      - name: pip after
        run: pip list -v
      - name: build project
        run: platformio run

  lint:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py-pip-
      - run: ls /home/runner/work/_temp -la
      - name: pip before
        run: pip list -v
      - run: |
          pip install --upgrade platformio
          platformio update
      - name: pip after
        run: pip list -v
      - name: check format
        run: platformio check --fail-on-defect high
